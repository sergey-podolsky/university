function [xmin, ymin] = allmin (fun, a, b)
% ѕоиск локальных минимумов fun внутри заданного интервала (а, №)
% »спользование [xmin, ymin] = allmin(fun, a, b)

% задание погрешности дл€ проверки услови€ попадани€ точки внутрь (а, №)
e = 1e-4*(b - a);
% вызов рекурсивной подфункции
xmin = loc_min(fun, a, b, e, 1);

% сортировка точек минимума в пор€дке возрастани€
xmin = sort(xmin);
% вычисление значений функции в точках локального минимума
ymin = feval(fun, xmin);

function xmin = loc_min(fun, a , b, e, new_set)
% –екурсивна€ подфункци€ дл€ поиска всех локальных минимумов
% Ќачальна€ инициализаци€ дл€ накапливаемых результатов
persistent n pnt
if new_set ~= 0
    pnt = [ ];
    n = 0;
end;

% задание начального приближени€
c = 0.5*(a + b);
% поиск локального минимума на [а, b]
z = fminsearch(fun, c);
if and(z > a + e , z < b - e )
    % найден новый локальный минимум увеличиваем счетчик
    % и добавл€ем локальный минимум в массив
    n = n + 1;
    pnt(n) = z;
    % поиск локальных минимумов на подынтервалах
    loc_min(fun, a, z, e, 0);
    loc_min(fun, z, b, e, 0);
end
% возвращаем массив найденных точек
xmin = pnt;

