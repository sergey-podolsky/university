/* * * * * * * * * * * * * * * * * 
 * Лабораторная работа №3
 * (файловый ввод-вывод)
 *
 *		Выполнил:
 * Подольский Сергей
 * группа: КВ-64
 *
 *		Описание проекта:
 * scanner.h - содержит прототипы функций;
 * scanner.c - содержит определеня функций;
 * scanner_db.c -  тест-драйв, демонстрирующий работоспособность функций
 * * * * * * * * * * * * * * * * */


#ifndef __scanner
#define __scanner

struct SCAN_INFO
{ 
	char model[25];	// наименование модели
	double price;	// цена       
	int x_size;		// горизонтальный размер области сканирования
	int y_size;		// вертикальный размер области сканирования
	int optr;		// оптическое разрешение
	char grey;		// число градаций серого
};
typedef	struct SCAN_INFO scan_info;

int add_scan_info(scan_info *info, char *path);
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * записывает в бинарный файл по имени path  данные о сканере из приведенной структуры.
 * Структура файла: в первых sizeof(int) байтах размещается значение типа int, определяющее количество записей в файле,
 * далее без пропусков размещаются записи о сканерах.
 * Функция должна следить, чтобы в файле не было повторяющихся записей.
 * Возвращаемый результат:
 * -1 - в слчае возникновения ошибки;
 *  0 - файл уже содержал указанную запись;
 *  1 - указанная запись добавлена успешно в существующий файл;
 *  2 - запись добавлена успешно в новый файл, ранее файл отсутствовал либо был пуст.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

int csv_to_dat(char *source, char *destination);
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * первоначальное заполнение бинарного файла destination из текстового файла source.
 * Формат .csv(Comma Separated Values) предполагает, что каждой строке файла хранится одна запись,
 * а ее поля отделяются друг от друга символом “;”.
 * Возвращает количество записанных сканеров, либо -1 в случае возникновения ошибки.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

scan_info *read_at(int number, char *path);
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * извлекает из файла данные о сканере по номеру записи.
 * Функция возвращает значение типа (SCAN_INFO *), если чтение прошло успешно, и NULL  в противном случае.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

int delete_at(int number, char *path);
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * удаляет из файла данные о сканере по номеру записи.
 * Функция возвращает ненулевое значение, если удаление прошло успешно, и -1 в противном случае.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

int get_cheaper_than(double price, char *source, char *destination);
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * читает из файла source данные о сканерах и выводит в текстовый файл destination список сканеров,
 * цена которых не превышает заданную. 
 * Возвращает количество сканеров, записанных в файл, либо -1 в случае возникновения ошибки чтения/записи.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

void print_info(scan_info *info);
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * выводит на екран данные info или же сообщение об ошибке при указателе на NULL.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

int fprint_info(scan_info *info, FILE *file);
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * выводит в текстовый файл file данные info.
 * Возвращает 1, если записаь прошла успешно, и -1 в противном случае.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

#endif